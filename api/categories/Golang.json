{"name":"Golang","slug":"Golang","count":9,"postlist":[{"title":"Golang tutorial 1","uid":"940d915bf94905eae8346cbc13db5243","slug":"Golang-Tutorial-1","date":"2021-08-29T21:34:48.000Z","updated":"2021-09-14T07:46:35.385Z","comments":true,"path":"api/articles/Golang-Tutorial-1.json","keywords":null,"cover":"/img/1.jpg","text":"Golang Tutorial 1Golang Constant Keywordsconst PI float64 = 3.1415926 特殊常量: iotaconst ( a = iota // iota 第一次出现时为 0, b // b = 1 c // c = 2 d ...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 2","uid":"f20d4f48999b3be7c6a4f7d5c95630f9","slug":"Golang-Tutorial-2","date":"2021-09-02T22:10:10.000Z","updated":"2021-09-03T21:49:44.152Z","comments":true,"path":"api/articles/Golang-Tutorial-2.json","keywords":null,"cover":"/img/2.jpg","text":"Golang 的 String 详解本章介绍 Go 语言中 string 相关的内容. 包括字符串创建, 修改, 遍历和转换等操作 Unicode in Go在 go 中支持 Unicode(UTF-8), 因此字符也称为 Unicode 码点或者runes, 在内存中用 int...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 3","uid":"3983d1b06f9cc59a424cf4b8b973001f","slug":"Golang-Tutorial-3","date":"2021-09-03T07:30:17.000Z","updated":"2021-09-12T00:55:53.899Z","comments":true,"path":"api/articles/Golang-Tutorial-3.json","keywords":null,"cover":"/img/3.jpg","text":"Golang Tutorial 3数组(Array)在 golang 中,数组是值类型变量,当作为参数传递时,会发生值拷贝,在函数体内部对数组进行修改后,并不会影响函数体外的数据 作为强类型语言, Golang 中的数组元素必须都是相同类型,此点与 python 的 list 有...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 4","uid":"ed56a0be6c67a53488e6ffd0f75904e2","slug":"Golang-Tutorial-4","date":"2021-09-05T22:06:48.000Z","updated":"2021-09-14T07:46:54.638Z","comments":true,"path":"api/articles/Golang-Tutorial-4.json","keywords":null,"cover":"/img/4.jpg","text":"Golang Tutorial 4切片(slice)Golang 中的切片是对数组一个连续片段的引用, 因此是引用类型. 这个连续的片段可以是整个数组,也可以是由开发者指定的开始和结束索引限定的一段连续片段. 从集合的角度来看,若数组是一个元素集合,则切片就是它的一系列非空子集....","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 5","uid":"21b7afb55dd7403da1611146a47b852e","slug":"Golang-Tutorial-5","date":"2021-09-12T12:18:36.000Z","updated":"2021-09-14T07:47:08.135Z","comments":true,"path":"api/articles/Golang-Tutorial-5.json","keywords":null,"cover":"/img/5.jpg","text":"Golang Tutorila 5Map Tutorialmap 在 go语言中也是一种引用类型, 因此多使用 make 函数来创建. 基础语法格式var m map[keyType]valueType var studentId map[string]int 同 slice 一...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 6","uid":"eaefd71f93a58b7ced195ad6747e390e","slug":"Golang-Tutorial-6","date":"2021-09-13T04:16:04.000Z","updated":"2021-09-14T07:47:28.019Z","comments":true,"path":"api/articles/Golang-Tutorial-6.json","keywords":null,"cover":"/img/6.jpg","text":"Golang Tutorial 6Struct结构体结构体定义基本语法使用 type 和 struct 关键字来定义一个自定义的类型. type Name struct&#123; field1 type1 `json:\"field1\"` field2 type2 `json:\"...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 7","uid":"de3eee39821c26516f0a3be9bd55d485","slug":"Golang-Tutorial-7","date":"2021-09-14T07:52:44.000Z","updated":"2021-09-14T10:09:27.880Z","comments":true,"path":"api/articles/Golang-Tutorial-7.json","keywords":null,"cover":"/img/7.jpg","text":"Golang Tutorial 7 继承与多态Golang 中的继承在 Go 中,继承实际是由类型组合来实现的, 根据前一节的内容, Go 的结构体中支持匿名字段, 由类型名作为字段名,且在实际使用时, 可以被省略. 下面以一个动物的例子来展示如何使用继承. 同时使用一个汽车的例...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 8","uid":"b7b9075ba8f3fce9f65889bb535dd257","slug":"Golang-Tutorial-8","date":"2021-09-14T10:10:28.000Z","updated":"2021-09-15T09:37:14.838Z","comments":true,"path":"api/articles/Golang-Tutorial-8.json","keywords":null,"cover":"/img/8.jpg","text":"Golang Tutorial 8类型的 String 方法和格式化描述符String()方法当定义了一个具有很多方法的类型时, 常常也会实现一个 String()方法来定制类型的字符串形式的输出. 如果一个类型定义了 String()方法,那么它会被 fmt.Printf()当...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}}},{"title":"Golang Tutorial 9","uid":"b9ad58d220db9597427a33bc2b1eea6a","slug":"Golang-Tutorial-9","date":"2021-09-15T09:37:40.000Z","updated":"2021-09-16T07:05:29.094Z","comments":true,"path":"api/articles/Golang-Tutorial-9.json","keywords":null,"cover":"/img/5.jpg","text":"Golang Tutorial 9 Function函数的可变参数在 Go 语言中, 函数可以指定一个不定长参数来接收多个同类型参数. 但是这个参数需要放在其他固定参数的最后. 本质上这个可变参数的实现是通过 slice. 所以在接收参数后也应当以切片对待 可变参数的定义func...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Golang","slug":"Golang","count":9,"path":"api/categories/Golang.json"}],"tags":[{"name":"Programming Language","slug":"Programming-Language","count":9,"path":"api/tags/Programming-Language.json"}],"author":{"name":"Hccc丶","slug":"blog-author","avatar":"/img/avatar.jpg","link":"/","description":"曾经沧海难为水, 除却巫山不是云<br/>取次花丛懒回顾, 半缘修道半缘君","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/HiChen85"},"bilibili":{"icon":"/svg/logo.svg","link":"https://space.bilibili.com/512394874"}}}},"feature":true}]}